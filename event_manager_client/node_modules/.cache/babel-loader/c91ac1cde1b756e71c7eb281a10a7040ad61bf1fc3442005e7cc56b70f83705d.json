{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User09\\\\source\\\\repos\\\\EventManager\\\\event_manager_client\\\\src\\\\pages\\\\EventDetails.js\",\n  _s = $RefreshSig$();\n// src/EventDetails.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './EventDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [event, setEvent] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [userRole, setUserRole] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n  useEffect(() => {\n    const token = sessionStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    const fetchData = async () => {\n      try {\n        const [eventRes, usersRes] = await Promise.all([fetch(`/api/events/${id}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        }), fetch(`/api/events/${id}/users`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        })]);\n        if (!eventRes.ok) {\n          if (eventRes.status === 401) {\n            navigate('/login');\n          }\n          throw new Error('Ошибка при загрузке деталей события');\n        }\n        if (!usersRes.ok) {\n          throw new Error('Ошибка при загрузке списка пользователей');\n        }\n        const eventData = await eventRes.json();\n        const usersData = await usersRes.json();\n        setEvent(eventData);\n        setUsers(usersData);\n\n        // Получаем userId из токена\n        const userId = getUserIdFromToken(token);\n\n        // Проверяем, записан ли пользователь на событие\n        const registered = usersData.some(user => user.id === userId);\n        setIsRegistered(registered);\n        setLoading(false);\n      } catch (error) {\n        console.error('Ошибка:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id, navigate]);\n\n  // Функция для получения userId из JWT токена\n  const getUserIdFromToken = token => {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      const payload = JSON.parse(jsonPayload);\n      return {\n        userId: parseInt(payload.nameid),\n        role: payload.role || payload['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']\n      };\n    } catch (error) {\n      console.error('Ошибка при получении информации из токена:', error);\n      return {\n        userId: null,\n        role: null\n      };\n    }\n  };\n  const handleRegister = async () => {\n    const token = sessionStorage.getItem('token');\n    const userId = getUserIdFromToken(token);\n    try {\n      const response = await fetch(`/api/events/${id}/register/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      alert('Вы успешно зарегистрировались на событие!');\n      // Обновляем состояние\n      await refreshData();\n    } catch (error) {\n      console.error('Ошибка:', error);\n      alert(`Ошибка: ${error.message}`);\n    }\n  };\n  const handleUnregister = async () => {\n    const token = sessionStorage.getItem('token');\n    const userId = getUserIdFromToken(token);\n    try {\n      const response = await fetch(`/api/events/${id}/unregister/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      alert('Вы успешно отменили регистрацию на событие!');\n      // Обновляем состояние\n      await refreshData();\n    } catch (error) {\n      console.error('Ошибка:', error);\n      alert(`Ошибка: ${error.message}`);\n    }\n  };\n  const refreshData = async () => {\n    const token = sessionStorage.getItem('token');\n    try {\n      const [eventRes, usersRes] = await Promise.all([fetch(`/api/events/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }), fetch(`/api/events/${id}/users`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      })]);\n      if (eventRes.ok && usersRes.ok) {\n        const eventData = await eventRes.json();\n        const usersData = await usersRes.json();\n        setEvent(eventData);\n        setUsers(usersData);\n        const {\n          userId,\n          role\n        } = getUserIdFromToken(token);\n        setUserRole(role);\n        const registered = usersData.some(user => user.id === userId);\n        setIsRegistered(registered);\n      }\n    } catch (error) {\n      console.error('Ошибка при обновлении данных:', error);\n    }\n  };\n\n  // Функция для обработки выбора изображения\n  const handleImageChange = event => {\n    setSelectedImage(event.target.files[0]);\n  };\n\n  // Функция для отправки изображения на сервер\n  const handleImageUpload = async () => {\n    const token = sessionStorage.getItem('token');\n    if (!selectedImage) {\n      alert('Пожалуйста, выберите изображение.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('Image', selectedImage);\n    try {\n      const response = await fetch(`/api/events/${id}/image`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n      alert('Изображение успешно обновлено!');\n      // Обновите данные события после успешной загрузки изображения\n      await refreshData();\n    } catch (error) {\n      console.error('Ошибка при загрузке изображения:', error);\n      alert(`Ошибка: ${error.message}`);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 16\n    }, this);\n  }\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u0435 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 16\n    }, this);\n  }\n  const canRegister = users.length < event.maxNumberOfUsers && !isRegistered;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), event.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: event.imageUrl,\n      alt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 16\n      }, this), \" \", event.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 16\n      }, this), \" \", event.startDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 16\n      }, this), \" \", event.category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 16\n      }, this), \" \", event.maxNumberOfUsers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), userRole === 'Admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-image-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleImageUpload,\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }, this), canRegister && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }, this), isRegistered && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUnregister,\n      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }, this), !canRegister && !isRegistered && users.length >= event.maxNumberOfUsers && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0414\\u043E\\u0441\\u0442\\u0438\\u0433\\u043D\\u0443\\u0442\\u043E \\u043C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0430\\u0432\\u0448\\u0438\\u0435\\u0441\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), users.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" \", user.surename, \" (\", user.email, \")\"]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0438\\u043A\\u0442\\u043E \\u043D\\u0435 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0430\\u043B\\u0441\\u044F \\u043D\\u0430 \\u044D\\u0442\\u043E \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u0435.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetails, \"mCfnemcpDo52vON9qtnU4sWRlr8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EventDetails;\nexport default EventDetails;\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","EventDetails","_s","id","navigate","event","setEvent","users","setUsers","loading","setLoading","isRegistered","setIsRegistered","userRole","setUserRole","selectedImage","setSelectedImage","token","sessionStorage","getItem","fetchData","eventRes","usersRes","Promise","all","fetch","headers","ok","status","Error","eventData","json","usersData","userId","getUserIdFromToken","registered","some","user","error","console","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","payload","JSON","parse","parseInt","nameid","role","handleRegister","response","method","errorText","text","alert","refreshData","message","handleUnregister","handleImageChange","target","files","handleImageUpload","formData","FormData","append","body","children","fileName","_jsxFileName","lineNumber","columnNumber","canRegister","length","maxNumberOfUsers","className","title","imageUrl","src","alt","description","startDate","category","type","accept","onChange","onClick","name","surename","email","_c","$RefreshReg$"],"sources":["C:/Users/User09/source/repos/EventManager/event_manager_client/src/pages/EventDetails.js"],"sourcesContent":["// src/EventDetails.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './EventDetails.css';\r\n\r\nconst EventDetails = () => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [event, setEvent] = useState(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [isRegistered, setIsRegistered] = useState(false);\r\n    const [userRole, setUserRole] = useState('');\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const token = sessionStorage.getItem('token');\r\n\r\n        if (!token) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const [eventRes, usersRes] = await Promise.all([\r\n                    fetch(`/api/events/${id}`, {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': `Bearer ${token}`\r\n                        }\r\n                    }),\r\n                    fetch(`/api/events/${id}/users`, {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'Authorization': `Bearer ${token}`\r\n                        }\r\n                    })\r\n                ]);\r\n\r\n                if (!eventRes.ok) {\r\n                    if (eventRes.status === 401) {\r\n                        navigate('/login');\r\n                    }\r\n                    throw new Error('Ошибка при загрузке деталей события');\r\n                }\r\n\r\n                if (!usersRes.ok) {\r\n                    throw new Error('Ошибка при загрузке списка пользователей');\r\n                }\r\n\r\n                const eventData = await eventRes.json();\r\n                const usersData = await usersRes.json();\r\n\r\n                setEvent(eventData);\r\n                setUsers(usersData);\r\n\r\n                // Получаем userId из токена\r\n                const userId = getUserIdFromToken(token);\r\n\r\n                // Проверяем, записан ли пользователь на событие\r\n                const registered = usersData.some(user => user.id === userId);\r\n                setIsRegistered(registered);\r\n\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Ошибка:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [id, navigate]);\r\n\r\n    // Функция для получения userId из JWT токена\r\n    const getUserIdFromToken = (token) => {\r\n        try {\r\n            const base64Url = token.split('.')[1];\r\n            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n            const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => {\r\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n            }).join(''));\r\n\r\n            const payload = JSON.parse(jsonPayload);\r\n            return {\r\n                userId: parseInt(payload.nameid),\r\n                role: payload.role || payload['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']\r\n            };\r\n        } catch (error) {\r\n            console.error('Ошибка при получении информации из токена:', error);\r\n            return { userId: null, role: null };\r\n        }\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n        const token = sessionStorage.getItem('token');\r\n        const userId = getUserIdFromToken(token);\r\n\r\n        try {\r\n            const response = await fetch(`/api/events/${id}/register/${userId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                throw new Error(errorText);\r\n            }\r\n\r\n            alert('Вы успешно зарегистрировались на событие!');\r\n            // Обновляем состояние\r\n            await refreshData();\r\n        } catch (error) {\r\n            console.error('Ошибка:', error);\r\n            alert(`Ошибка: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const handleUnregister = async () => {\r\n        const token = sessionStorage.getItem('token');\r\n        const userId = getUserIdFromToken(token);\r\n\r\n        try {\r\n            const response = await fetch(`/api/events/${id}/unregister/${userId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                throw new Error(errorText);\r\n            }\r\n\r\n            alert('Вы успешно отменили регистрацию на событие!');\r\n            // Обновляем состояние\r\n            await refreshData();\r\n        } catch (error) {\r\n            console.error('Ошибка:', error);\r\n            alert(`Ошибка: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const refreshData = async () => {\r\n        const token = sessionStorage.getItem('token');\r\n\r\n        try {\r\n            const [eventRes, usersRes] = await Promise.all([\r\n                fetch(`/api/events/${id}`, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                }),\r\n                fetch(`/api/events/${id}/users`, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n            ]);\r\n\r\n            if (eventRes.ok && usersRes.ok) {\r\n                const eventData = await eventRes.json();\r\n                const usersData = await usersRes.json();\r\n\r\n                setEvent(eventData);\r\n                setUsers(usersData);\r\n\r\n                const { userId, role } = getUserIdFromToken(token);\r\n                setUserRole(role);\r\n\r\n                \r\n                const registered = usersData.some(user => user.id === userId);\r\n                setIsRegistered(registered);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при обновлении данных:', error);\r\n        }\r\n    };\r\n\r\n    // Функция для обработки выбора изображения\r\n    const handleImageChange = (event) => {\r\n        setSelectedImage(event.target.files[0]);\r\n    };\r\n\r\n    // Функция для отправки изображения на сервер\r\n    const handleImageUpload = async () => {\r\n        const token = sessionStorage.getItem('token');\r\n\r\n        if (!selectedImage) {\r\n            alert('Пожалуйста, выберите изображение.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('Image', selectedImage);\r\n\r\n        try {\r\n            const response = await fetch(`/api/events/${id}/image`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: formData\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                throw new Error(errorText);\r\n            }\r\n\r\n            alert('Изображение успешно обновлено!');\r\n            // Обновите данные события после успешной загрузки изображения\r\n            await refreshData();\r\n        } catch (error) {\r\n            console.error('Ошибка при загрузке изображения:', error);\r\n            alert(`Ошибка: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <p>Загрузка...</p>;\r\n    }\r\n\r\n    if (!event) {\r\n        return <p>Событие не найдено.</p>;\r\n    }\r\n\r\n    const canRegister = users.length < event.maxNumberOfUsers && !isRegistered;\r\n\r\n    return (\r\n        <div className=\"event-details-container\">\r\n            <h2>{event.title}</h2>\r\n            {event.imageUrl && <img src={event.imageUrl} alt={event.title} />}\r\n            <p><strong>Описание:</strong> {event.description}</p>\r\n            <p><strong>Дата начала:</strong> {event.startDate}</p>\r\n            <p><strong>Категория:</strong> {event.category}</p>\r\n            <p><strong>Максимальное количество участников:</strong> {event.maxNumberOfUsers}</p>\r\n            {userRole === 'Admin' && (\r\n                <div className=\"admin-image-upload\">\r\n                    <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n                    <button onClick={handleImageUpload}>Изменить изображение</button>\r\n                </div>\r\n            )}\r\n\r\n            {canRegister && (\r\n                <button onClick={handleRegister}>Записаться на событие</button>\r\n            )}\r\n\r\n            {isRegistered && (\r\n                <button onClick={handleUnregister}>Отменить регистрацию</button>\r\n            )}\r\n\r\n            {(!canRegister && !isRegistered && users.length >= event.maxNumberOfUsers) && (\r\n                <p>Достигнуто максимальное количество участников.</p>\r\n            )}\r\n\r\n            <h3>Записавшиеся пользователи:</h3>\r\n            {users.length > 0 ? (\r\n                <ul>\r\n                    {users.map(user => (\r\n                        <li key={user.id}>\r\n                            {user.name} {user.surename} ({user.email})\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>Никто не записался на это событие.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventDetails;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZ,MAAMsB,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAE7C,IAAI,CAACF,KAAK,EAAE;MACRb,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACJ;IAEA,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC3CC,KAAK,CAAC,eAAetB,EAAE,EAAE,EAAE;UACvBuB,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUT,KAAK;UACpC;QACJ,CAAC,CAAC,EACFQ,KAAK,CAAC,eAAetB,EAAE,QAAQ,EAAE;UAC7BuB,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUT,KAAK;UACpC;QACJ,CAAC,CAAC,CACL,CAAC;QAEF,IAAI,CAACI,QAAQ,CAACM,EAAE,EAAE;UACd,IAAIN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;YACzBxB,QAAQ,CAAC,QAAQ,CAAC;UACtB;UACA,MAAM,IAAIyB,KAAK,CAAC,qCAAqC,CAAC;QAC1D;QAEA,IAAI,CAACP,QAAQ,CAACK,EAAE,EAAE;UACd,MAAM,IAAIE,KAAK,CAAC,0CAA0C,CAAC;QAC/D;QAEA,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvC,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACS,IAAI,CAAC,CAAC;QAEvCzB,QAAQ,CAACwB,SAAS,CAAC;QACnBtB,QAAQ,CAACwB,SAAS,CAAC;;QAEnB;QACA,MAAMC,MAAM,GAAGC,kBAAkB,CAACjB,KAAK,CAAC;;QAExC;QACA,MAAMkB,UAAU,GAAGH,SAAS,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAClC,EAAE,KAAK8B,MAAM,CAAC;QAC7DrB,eAAe,CAACuB,UAAU,CAAC;QAE3BzB,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAO4B,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/B5B,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDU,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACjB,EAAE,EAAEC,QAAQ,CAAC,CAAC;;EAElB;EACA,MAAM8B,kBAAkB,GAAIjB,KAAK,IAAK;IAClC,IAAI;MACA,MAAMuB,SAAS,GAAGvB,KAAK,CAACwB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACD,KAAK,CAAC,EAAE,CAAC,CAACM,GAAG,CAACC,CAAC,IAAI;QACnE,OAAO,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MAChE,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;MAEZ,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACX,WAAW,CAAC;MACvC,OAAO;QACHX,MAAM,EAAEuB,QAAQ,CAACH,OAAO,CAACI,MAAM,CAAC;QAChCC,IAAI,EAAEL,OAAO,CAACK,IAAI,IAAIL,OAAO,CAAC,8DAA8D;MAChG,CAAC;IACL,CAAC,CAAC,OAAOf,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAClE,OAAO;QAAEL,MAAM,EAAE,IAAI;QAAEyB,IAAI,EAAE;MAAK,CAAC;IACvC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM1C,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,MAAMc,MAAM,GAAGC,kBAAkB,CAACjB,KAAK,CAAC;IAExC,IAAI;MACA,MAAM2C,QAAQ,GAAG,MAAMnC,KAAK,CAAC,eAAetB,EAAE,aAAa8B,MAAM,EAAE,EAAE;QACjE4B,MAAM,EAAE,KAAK;QACbnC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUT,KAAK;QACpC;MACJ,CAAC,CAAC;MAEF,IAAI,CAAC2C,QAAQ,CAACjC,EAAE,EAAE;QACd,MAAMmC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIlC,KAAK,CAACiC,SAAS,CAAC;MAC9B;MAEAE,KAAK,CAAC,2CAA2C,CAAC;MAClD;MACA,MAAMC,WAAW,CAAC,CAAC;IACvB,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B0B,KAAK,CAAC,WAAW1B,KAAK,CAAC4B,OAAO,EAAE,CAAC;IACrC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMlD,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,MAAMc,MAAM,GAAGC,kBAAkB,CAACjB,KAAK,CAAC;IAExC,IAAI;MACA,MAAM2C,QAAQ,GAAG,MAAMnC,KAAK,CAAC,eAAetB,EAAE,eAAe8B,MAAM,EAAE,EAAE;QACnE4B,MAAM,EAAE,KAAK;QACbnC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUT,KAAK;QACpC;MACJ,CAAC,CAAC;MAEF,IAAI,CAAC2C,QAAQ,CAACjC,EAAE,EAAE;QACd,MAAMmC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIlC,KAAK,CAACiC,SAAS,CAAC;MAC9B;MAEAE,KAAK,CAAC,6CAA6C,CAAC;MACpD;MACA,MAAMC,WAAW,CAAC,CAAC;IACvB,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B0B,KAAK,CAAC,WAAW1B,KAAK,CAAC4B,OAAO,EAAE,CAAC;IACrC;EACJ,CAAC;EAED,MAAMD,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMhD,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAE7C,IAAI;MACA,MAAM,CAACE,QAAQ,EAAEC,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC3CC,KAAK,CAAC,eAAetB,EAAE,EAAE,EAAE;QACvBuB,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUT,KAAK;QACpC;MACJ,CAAC,CAAC,EACFQ,KAAK,CAAC,eAAetB,EAAE,QAAQ,EAAE;QAC7BuB,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUT,KAAK;QACpC;MACJ,CAAC,CAAC,CACL,CAAC;MAEF,IAAII,QAAQ,CAACM,EAAE,IAAIL,QAAQ,CAACK,EAAE,EAAE;QAC5B,MAAMG,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvC,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACS,IAAI,CAAC,CAAC;QAEvCzB,QAAQ,CAACwB,SAAS,CAAC;QACnBtB,QAAQ,CAACwB,SAAS,CAAC;QAEnB,MAAM;UAAEC,MAAM;UAAEyB;QAAK,CAAC,GAAGxB,kBAAkB,CAACjB,KAAK,CAAC;QAClDH,WAAW,CAAC4C,IAAI,CAAC;QAGjB,MAAMvB,UAAU,GAAGH,SAAS,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAClC,EAAE,KAAK8B,MAAM,CAAC;QAC7DrB,eAAe,CAACuB,UAAU,CAAC;MAC/B;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;;EAED;EACA,MAAM8B,iBAAiB,GAAI/D,KAAK,IAAK;IACjCW,gBAAgB,CAACX,KAAK,CAACgE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMtD,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAE7C,IAAI,CAACJ,aAAa,EAAE;MAChBiD,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACJ;IAEA,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE3D,aAAa,CAAC;IAEvC,IAAI;MACA,MAAM6C,QAAQ,GAAG,MAAMnC,KAAK,CAAC,eAAetB,EAAE,QAAQ,EAAE;QACpD0D,MAAM,EAAE,KAAK;QACbnC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUT,KAAK;QACpC,CAAC;QACD0D,IAAI,EAAEH;MACV,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACjC,EAAE,EAAE;QACd,MAAMmC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIlC,KAAK,CAACiC,SAAS,CAAC;MAC9B;MAEAE,KAAK,CAAC,gCAAgC,CAAC;MACvC;MACA,MAAMC,WAAW,CAAC,CAAC;IACvB,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD0B,KAAK,CAAC,WAAW1B,KAAK,CAAC4B,OAAO,EAAE,CAAC;IACrC;EACJ,CAAC;EAED,IAAIzD,OAAO,EAAE;IACT,oBAAOT,OAAA;MAAA4E,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7B;EAEA,IAAI,CAAC3E,KAAK,EAAE;IACR,oBAAOL,OAAA;MAAA4E,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;EAEA,MAAMC,WAAW,GAAG1E,KAAK,CAAC2E,MAAM,GAAG7E,KAAK,CAAC8E,gBAAgB,IAAI,CAACxE,YAAY;EAE1E,oBACIX,OAAA;IAAKoF,SAAS,EAAC,yBAAyB;IAAAR,QAAA,gBACpC5E,OAAA;MAAA4E,QAAA,EAAKvE,KAAK,CAACgF;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrB3E,KAAK,CAACiF,QAAQ,iBAAItF,OAAA;MAAKuF,GAAG,EAAElF,KAAK,CAACiF,QAAS;MAACE,GAAG,EAAEnF,KAAK,CAACgF;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjEhF,OAAA;MAAA4E,QAAA,gBAAG5E,OAAA;QAAA4E,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC3E,KAAK,CAACoF,WAAW;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDhF,OAAA;MAAA4E,QAAA,gBAAG5E,OAAA;QAAA4E,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC3E,KAAK,CAACqF,SAAS;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDhF,OAAA;MAAA4E,QAAA,gBAAG5E,OAAA;QAAA4E,QAAA,EAAQ;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC3E,KAAK,CAACsF,QAAQ;IAAA;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDhF,OAAA;MAAA4E,QAAA,gBAAG5E,OAAA;QAAA4E,QAAA,EAAQ;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC3E,KAAK,CAAC8E,gBAAgB;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnFnE,QAAQ,KAAK,OAAO,iBACjBb,OAAA;MAAKoF,SAAS,EAAC,oBAAoB;MAAAR,QAAA,gBAC/B5E,OAAA;QAAO4F,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,SAAS;QAACC,QAAQ,EAAE1B;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnEhF,OAAA;QAAQ+F,OAAO,EAAExB,iBAAkB;QAAAK,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CACR,EAEAC,WAAW,iBACRjF,OAAA;MAAQ+F,OAAO,EAAEpC,cAAe;MAAAiB,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACjE,EAEArE,YAAY,iBACTX,OAAA;MAAQ+F,OAAO,EAAE5B,gBAAiB;MAAAS,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAClE,EAEC,CAACC,WAAW,IAAI,CAACtE,YAAY,IAAIJ,KAAK,CAAC2E,MAAM,IAAI7E,KAAK,CAAC8E,gBAAgB,iBACrEnF,OAAA;MAAA4E,QAAA,EAAG;IAA8C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvD,eAEDhF,OAAA;MAAA4E,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClCzE,KAAK,CAAC2E,MAAM,GAAG,CAAC,gBACblF,OAAA;MAAA4E,QAAA,EACKrE,KAAK,CAACwC,GAAG,CAACV,IAAI,iBACXrC,OAAA;QAAA4E,QAAA,GACKvC,IAAI,CAAC2D,IAAI,EAAC,GAAC,EAAC3D,IAAI,CAAC4D,QAAQ,EAAC,IAAE,EAAC5D,IAAI,CAAC6D,KAAK,EAAC,GAC7C;MAAA,GAFS7D,IAAI,CAAClC,EAAE;QAAA0E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELhF,OAAA;MAAA4E,QAAA,EAAG;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC9E,EAAA,CA/QID,YAAY;EAAA,QACCJ,SAAS,EACPC,WAAW;AAAA;AAAAqG,EAAA,GAF1BlG,YAAY;AAiRlB,eAAeA,YAAY;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}